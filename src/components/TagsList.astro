---
type Props = {
  tags?: Array<string>;
  limit?: number;
  class?: string;
};

let { tags, limit = 0, class: className, ...rest } = Astro.props;
let list = tags?.map((t) => ({ text: t, href: t })) || [];

if (limit && list.length > limit) {
  list = list.slice(0, limit);
  list.push({ text: "+more", href: "/tags" });
}

function toURL(url: string) {
  if (!url) return;
  if (url.startsWith('/')) return url;
  return `/tags/${url}`;
}
---

<div class:list={["tags-list", className]} {...rest}>
  {
    !!list.length && (
      <>
        tags:{" "}
        {list.map((tag, i) => (
          <>
            <a href={toURL(tag.href)}>{tag.text}</a>{i < list.length - 1 && ", "}
          </>
        ))}
      </>
    )
  }
</div>
